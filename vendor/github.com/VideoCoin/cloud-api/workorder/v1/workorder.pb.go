// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: workorder/v1/workorder.proto

package v1

import (
	fmt "fmt"
	v1 "github.com/VideoCoin/cloud-api/profiles/v1"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkOrderStatus int32

const (
	WorkOrderStatusNone       WorkOrderStatus = 0
	WorkOrderStatusNew        WorkOrderStatus = 1
	WorkOrderStatusPending    WorkOrderStatus = 2
	WorkOrderStatusProcessing WorkOrderStatus = 3
	WorkOrderStatusReady      WorkOrderStatus = 4
	WorkOrderStatusComplete   WorkOrderStatus = 5
	WorkOrderStatusCanceled   WorkOrderStatus = 6
	WorkOrderStatusFailed     WorkOrderStatus = 7
)

var WorkOrderStatus_name = map[int32]string{
	0: "none",
	1: "new",
	2: "pending",
	3: "processing",
	4: "ready",
	5: "complete",
	6: "canceld",
	7: "failed",
}

var WorkOrderStatus_value = map[string]int32{
	"none":       0,
	"new":        1,
	"pending":    2,
	"processing": 3,
	"ready":      4,
	"complete":   5,
	"canceld":    6,
	"failed":     7,
}

func (x WorkOrderStatus) String() string {
	return proto.EnumName(WorkOrderStatus_name, int32(x))
}

func (WorkOrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7ef37cf3188837f0, []int{0}
}

type IngestStatus int32

const (
	IngestStatusNone     IngestStatus = 0
	IngestStatusActive   IngestStatus = 1
	IngestStatusInactive IngestStatus = 2
	IngestStatusError    IngestStatus = 3
)

var IngestStatus_name = map[int32]string{
	0: "ingest_status_none",
	1: "ingest_status_active",
	2: "ingest_status_inactive",
	3: "ingest_status_error",
}

var IngestStatus_value = map[string]int32{
	"ingest_status_none":     0,
	"ingest_status_active":   1,
	"ingest_status_inactive": 2,
	"ingest_status_error":    3,
}

func (x IngestStatus) String() string {
	return proto.EnumName(IngestStatus_name, int32(x))
}

func (IngestStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7ef37cf3188837f0, []int{1}
}

type WorkOrder struct {
	Id                   uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PipelineId           string       `protobuf:"bytes,2,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	TranscoderId         string       `protobuf:"bytes,3,opt,name=transcoder_id,json=transcoderId,proto3" json:"transcoder_id,omitempty"`
	ProfileId            v1.ProfileId `protobuf:"varint,4,opt,name=profile_id,json=profileId,proto3,enum=cloud.api.profiles.v1.ProfileId" json:"profile_id,omitempty"`
	ClientAddress        string       `protobuf:"bytes,5,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	StreamAddress        string       `protobuf:"bytes,6,opt,name=stream_address,json=streamAddress,proto3" json:"stream_address,omitempty"`
	StreamId             int64        `protobuf:"varint,7,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	TranscodeInputUrl    string       `protobuf:"bytes,8,opt,name=transcode_input_url,json=transcodeInputUrl,proto3" json:"transcode_input_url,omitempty"`
	IngestInputUrl       string       `protobuf:"bytes,9,opt,name=ingest_input_url,json=ingestInputUrl,proto3" json:"ingest_input_url,omitempty"`
	TranscodeOutputUrl   string       `protobuf:"bytes,10,opt,name=transcode_output_url,json=transcodeOutputUrl,proto3" json:"transcode_output_url,omitempty"`
	Status               string       `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	Chunks               []byte       `protobuf:"bytes,12,opt,name=chunks,proto3" json:"chunks,omitempty" gorm:"chunks;type:json"sql:"type:json"`
	CreatedAt            int64        `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int64        `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Worker               []byte       `protobuf:"bytes,15,opt,name=worker,proto3" json:"worker,omitempty" gorm:"worker;type:binary(32);DEFAULT:NULL"sql:"type:binary(32);DEFAULT:null"`
	Refunded             bool         `protobuf:"varint,20,opt,name=refunded,proto3" json:"refunded,omitempty"`
	IngestStatus         IngestStatus `protobuf:"varint,21,opt,name=ingest_status,json=ingestStatus,proto3,enum=cloud.api.workorder.v1.IngestStatus" json:"ingest_status,omitempty"`
	StreamHash           string       `protobuf:"bytes,22,opt,name=stream_hash,json=streamHash,proto3" json:"stream_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WorkOrder) Reset()         { *m = WorkOrder{} }
func (m *WorkOrder) String() string { return proto.CompactTextString(m) }
func (*WorkOrder) ProtoMessage()    {}
func (*WorkOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ef37cf3188837f0, []int{0}
}
func (m *WorkOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrder.Unmarshal(m, b)
}
func (m *WorkOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrder.Marshal(b, m, deterministic)
}
func (m *WorkOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrder.Merge(m, src)
}
func (m *WorkOrder) XXX_Size() int {
	return xxx_messageInfo_WorkOrder.Size(m)
}
func (m *WorkOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrder.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrder proto.InternalMessageInfo

func (m *WorkOrder) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WorkOrder) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

func (m *WorkOrder) GetTranscoderId() string {
	if m != nil {
		return m.TranscoderId
	}
	return ""
}

func (m *WorkOrder) GetProfileId() v1.ProfileId {
	if m != nil {
		return m.ProfileId
	}
	return v1.ProfileIdNone
}

func (m *WorkOrder) GetClientAddress() string {
	if m != nil {
		return m.ClientAddress
	}
	return ""
}

func (m *WorkOrder) GetStreamAddress() string {
	if m != nil {
		return m.StreamAddress
	}
	return ""
}

func (m *WorkOrder) GetStreamId() int64 {
	if m != nil {
		return m.StreamId
	}
	return 0
}

func (m *WorkOrder) GetTranscodeInputUrl() string {
	if m != nil {
		return m.TranscodeInputUrl
	}
	return ""
}

func (m *WorkOrder) GetIngestInputUrl() string {
	if m != nil {
		return m.IngestInputUrl
	}
	return ""
}

func (m *WorkOrder) GetTranscodeOutputUrl() string {
	if m != nil {
		return m.TranscodeOutputUrl
	}
	return ""
}

func (m *WorkOrder) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *WorkOrder) GetChunks() []byte {
	if m != nil {
		return m.Chunks
	}
	return nil
}

func (m *WorkOrder) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *WorkOrder) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *WorkOrder) GetWorker() []byte {
	if m != nil {
		return m.Worker
	}
	return nil
}

func (m *WorkOrder) GetRefunded() bool {
	if m != nil {
		return m.Refunded
	}
	return false
}

func (m *WorkOrder) GetIngestStatus() IngestStatus {
	if m != nil {
		return m.IngestStatus
	}
	return IngestStatusNone
}

func (m *WorkOrder) GetStreamHash() string {
	if m != nil {
		return m.StreamHash
	}
	return ""
}

type JobProfile struct {
	Id                   uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PipelineId           string       `protobuf:"bytes,2,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	ProfileId            v1.ProfileId `protobuf:"varint,3,opt,name=profile_id,json=profileId,proto3,enum=cloud.api.profiles.v1.ProfileId" json:"profile_id,omitempty"`
	IngestInputUrl       string       `protobuf:"bytes,4,opt,name=ingest_input_url,json=ingestInputUrl,proto3" json:"ingest_input_url,omitempty"`
	TranscodeOutputUrl   string       `protobuf:"bytes,5,opt,name=transcode_output_url,json=transcodeOutputUrl,proto3" json:"transcode_output_url,omitempty"`
	ClientAddress        string       `protobuf:"bytes,6,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	StreamId             int64        `protobuf:"varint,7,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	StreamAddress        string       `protobuf:"bytes,8,opt,name=stream_address,json=streamAddress,proto3" json:"stream_address,omitempty"`
	Status               string       `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	IngestStatus         IngestStatus `protobuf:"varint,10,opt,name=ingest_status,json=ingestStatus,proto3,enum=cloud.api.workorder.v1.IngestStatus" json:"ingest_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *JobProfile) Reset()         { *m = JobProfile{} }
func (m *JobProfile) String() string { return proto.CompactTextString(m) }
func (*JobProfile) ProtoMessage()    {}
func (*JobProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ef37cf3188837f0, []int{1}
}
func (m *JobProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobProfile.Unmarshal(m, b)
}
func (m *JobProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobProfile.Marshal(b, m, deterministic)
}
func (m *JobProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobProfile.Merge(m, src)
}
func (m *JobProfile) XXX_Size() int {
	return xxx_messageInfo_JobProfile.Size(m)
}
func (m *JobProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_JobProfile.DiscardUnknown(m)
}

var xxx_messageInfo_JobProfile proto.InternalMessageInfo

func (m *JobProfile) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JobProfile) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

func (m *JobProfile) GetProfileId() v1.ProfileId {
	if m != nil {
		return m.ProfileId
	}
	return v1.ProfileIdNone
}

func (m *JobProfile) GetIngestInputUrl() string {
	if m != nil {
		return m.IngestInputUrl
	}
	return ""
}

func (m *JobProfile) GetTranscodeOutputUrl() string {
	if m != nil {
		return m.TranscodeOutputUrl
	}
	return ""
}

func (m *JobProfile) GetClientAddress() string {
	if m != nil {
		return m.ClientAddress
	}
	return ""
}

func (m *JobProfile) GetStreamId() int64 {
	if m != nil {
		return m.StreamId
	}
	return 0
}

func (m *JobProfile) GetStreamAddress() string {
	if m != nil {
		return m.StreamAddress
	}
	return ""
}

func (m *JobProfile) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *JobProfile) GetIngestStatus() IngestStatus {
	if m != nil {
		return m.IngestStatus
	}
	return IngestStatusNone
}

type JobProfiles struct {
	JobProfiles          []*JobProfile `protobuf:"bytes,1,rep,name=job_profiles,json=jobProfiles,proto3" json:"job_profiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *JobProfiles) Reset()         { *m = JobProfiles{} }
func (m *JobProfiles) String() string { return proto.CompactTextString(m) }
func (*JobProfiles) ProtoMessage()    {}
func (*JobProfiles) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ef37cf3188837f0, []int{2}
}
func (m *JobProfiles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobProfiles.Unmarshal(m, b)
}
func (m *JobProfiles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobProfiles.Marshal(b, m, deterministic)
}
func (m *JobProfiles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobProfiles.Merge(m, src)
}
func (m *JobProfiles) XXX_Size() int {
	return xxx_messageInfo_JobProfiles.Size(m)
}
func (m *JobProfiles) XXX_DiscardUnknown() {
	xxx_messageInfo_JobProfiles.DiscardUnknown(m)
}

var xxx_messageInfo_JobProfiles proto.InternalMessageInfo

func (m *JobProfiles) GetJobProfiles() []*JobProfile {
	if m != nil {
		return m.JobProfiles
	}
	return nil
}

func init() {
	proto.RegisterEnum("cloud.api.workorder.v1.WorkOrderStatus", WorkOrderStatus_name, WorkOrderStatus_value)
	proto.RegisterEnum("cloud.api.workorder.v1.IngestStatus", IngestStatus_name, IngestStatus_value)
	proto.RegisterType((*WorkOrder)(nil), "cloud.api.workorder.v1.WorkOrder")
	proto.RegisterType((*JobProfile)(nil), "cloud.api.workorder.v1.JobProfile")
	proto.RegisterType((*JobProfiles)(nil), "cloud.api.workorder.v1.JobProfiles")
}

func init() { proto.RegisterFile("workorder/v1/workorder.proto", fileDescriptor_7ef37cf3188837f0) }

var fileDescriptor_7ef37cf3188837f0 = []byte{
	// 940 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xc7, 0x45, 0xc9, 0x96, 0xa5, 0xb1, 0xa4, 0x30, 0x1b, 0x59, 0x66, 0x98, 0x46, 0x66, 0x95,
	0x7e, 0x30, 0x46, 0x2d, 0xc5, 0x4e, 0x2f, 0x75, 0x0e, 0x85, 0x9c, 0x3a, 0xa8, 0x0a, 0x23, 0x31,
	0xd8, 0xb8, 0x05, 0x7a, 0x11, 0x28, 0xee, 0x5a, 0x5a, 0x9b, 0xde, 0x65, 0x97, 0xa4, 0x0c, 0xbf,
	0x41, 0xa1, 0x27, 0xe8, 0x45, 0xa7, 0xb6, 0x40, 0x9f, 0xa1, 0x4f, 0xd0, 0x63, 0x9f, 0x20, 0x28,
	0xdc, 0x43, 0x81, 0x1e, 0xf3, 0x04, 0x05, 0x97, 0x14, 0xf5, 0x61, 0xa5, 0x80, 0x7b, 0xe3, 0xce,
	0xff, 0x37, 0xc3, 0xe1, 0xec, 0x7f, 0x24, 0x78, 0xef, 0x92, 0x8b, 0x73, 0x2e, 0x30, 0x11, 0xad,
	0xe1, 0x6e, 0x2b, 0x3d, 0x34, 0x3d, 0xc1, 0x03, 0x8e, 0x6a, 0x8e, 0xcb, 0x43, 0xdc, 0xb4, 0x3d,
	0xda, 0x9c, 0x4a, 0xc3, 0x5d, 0x7d, 0xa7, 0x4f, 0x83, 0x41, 0xd8, 0x6b, 0x3a, 0xfc, 0xa2, 0xd5,
	0xe7, 0x7d, 0xde, 0x92, 0x78, 0x2f, 0x3c, 0x95, 0x27, 0x79, 0x90, 0x4f, 0x71, 0x19, 0xfd, 0xb3,
	0x19, 0xfc, 0x1b, 0x8a, 0x09, 0x7f, 0xce, 0x29, 0x6b, 0xc9, 0xda, 0x3b, 0xb6, 0x47, 0xa3, 0xec,
	0x53, 0xea, 0x12, 0x3f, 0x6a, 0x61, 0xf2, 0x1c, 0xa7, 0x36, 0x7e, 0xc9, 0x43, 0xf1, 0x5b, 0x2e,
	0xce, 0x5f, 0x45, 0xaf, 0x46, 0x15, 0xc8, 0x52, 0xac, 0x29, 0x86, 0x62, 0x96, 0xad, 0x2c, 0xc5,
	0x68, 0x0b, 0xd6, 0x3d, 0xea, 0x11, 0x97, 0x32, 0xd2, 0xa5, 0x58, 0xcb, 0x1a, 0x8a, 0x59, 0xb4,
	0x60, 0x12, 0xea, 0x60, 0xf4, 0x08, 0xca, 0x81, 0xb0, 0x99, 0xef, 0x70, 0x4c, 0x44, 0x84, 0xe4,
	0x24, 0x52, 0x9a, 0x06, 0x3b, 0x18, 0x7d, 0x0e, 0x90, 0xbc, 0x35, 0x22, 0x56, 0x0c, 0xc5, 0xac,
	0xec, 0x19, 0xcd, 0xe9, 0xa7, 0xa7, 0x2d, 0x0d, 0x77, 0x9b, 0xc7, 0xf1, 0x73, 0x07, 0x5b, 0x45,
	0x6f, 0xf2, 0x88, 0x3e, 0x84, 0x8a, 0xe3, 0x52, 0xc2, 0x82, 0xae, 0x8d, 0xb1, 0x20, 0xbe, 0xaf,
	0xad, 0xca, 0xd7, 0x94, 0xe3, 0x68, 0x3b, 0x0e, 0x46, 0x98, 0x1f, 0x08, 0x62, 0x5f, 0xa4, 0x58,
	0x3e, 0xc6, 0xe2, 0xe8, 0x04, 0x7b, 0x00, 0xc5, 0x04, 0xa3, 0x58, 0x5b, 0x33, 0x14, 0x33, 0x67,
	0x15, 0xe2, 0x40, 0x07, 0xa3, 0x26, 0xdc, 0x4b, 0x7b, 0xef, 0x52, 0xe6, 0x85, 0x41, 0x37, 0x14,
	0xae, 0x56, 0x90, 0x85, 0xee, 0xa6, 0x52, 0x27, 0x52, 0x4e, 0x84, 0x8b, 0x4c, 0x50, 0x29, 0xeb,
	0x13, 0x3f, 0x98, 0x81, 0x8b, 0x12, 0xae, 0xc4, 0xf1, 0x94, 0x7c, 0x02, 0xd5, 0x69, 0x65, 0x1e,
	0x06, 0x13, 0x1a, 0x24, 0x8d, 0x52, 0xed, 0x95, 0x94, 0xa2, 0x8c, 0x1a, 0xe4, 0xfd, 0xc0, 0x0e,
	0x42, 0x5f, 0x5b, 0x97, 0x4c, 0x72, 0x42, 0x07, 0x90, 0x77, 0x06, 0x21, 0x3b, 0xf7, 0xb5, 0x92,
	0xa1, 0x98, 0xa5, 0x83, 0xed, 0xb7, 0x6f, 0xb6, 0x3e, 0xea, 0x73, 0x71, 0xb1, 0xdf, 0x88, 0xe3,
	0xcf, 0x82, 0x2b, 0x8f, 0xec, 0x9f, 0xf9, 0x9c, 0x35, 0xfc, 0xef, 0xdd, 0xfd, 0xc6, 0xf4, 0x68,
	0x25, 0x99, 0xe8, 0x21, 0x80, 0x23, 0x88, 0x1d, 0x10, 0xdc, 0xb5, 0x03, 0xad, 0x2c, 0xa7, 0x50,
	0x4c, 0x22, 0xed, 0x20, 0x92, 0x43, 0x0f, 0x4f, 0xe4, 0x4a, 0x2c, 0x27, 0x91, 0x76, 0x80, 0x06,
	0x90, 0x8f, 0xfc, 0x4a, 0x84, 0x76, 0x47, 0x76, 0x70, 0xfc, 0xf6, 0xcd, 0xd6, 0x51, 0xdc, 0x41,
	0x1c, 0x8f, 0x3b, 0xe8, 0x51, 0x66, 0x8b, 0x2b, 0xf3, 0xe9, 0xde, 0xe3, 0x67, 0x5f, 0x1c, 0xbe,
	0x68, 0x9f, 0x1c, 0xbd, 0xde, 0x7f, 0x79, 0x72, 0x74, 0x34, 0xd3, 0xd4, 0x12, 0x82, 0x85, 0xae,
	0xdb, 0xb0, 0x92, 0xfa, 0x48, 0x87, 0x82, 0x20, 0xa7, 0x21, 0xc3, 0x04, 0x6b, 0x55, 0x43, 0x31,
	0x0b, 0x56, 0x7a, 0x46, 0x1d, 0x28, 0x27, 0xb3, 0x4f, 0xc6, 0xb4, 0x21, 0xad, 0xf5, 0x41, 0x73,
	0xf9, 0x56, 0x35, 0x3b, 0x12, 0xfe, 0x5a, 0xb2, 0x56, 0x89, 0xce, 0x9c, 0x22, 0xa3, 0x27, 0x9e,
	0x18, 0xd8, 0xfe, 0x40, 0xab, 0xc5, 0x46, 0x8f, 0x43, 0x5f, 0xda, 0xfe, 0xa0, 0xf1, 0x6b, 0x0e,
	0xe0, 0x2b, 0xde, 0x4b, 0xec, 0x79, 0xfb, 0x45, 0x99, 0xdf, 0x81, 0xdc, 0xed, 0x77, 0x60, 0x99,
	0xd1, 0x56, 0x6e, 0x65, 0xb4, 0xd5, 0x77, 0x1a, 0xed, 0xe6, 0x7e, 0xe5, 0x97, 0xed, 0xd7, 0x7f,
	0x2e, 0xce, 0xcd, 0xe5, 0x2b, 0x2c, 0x5b, 0xbe, 0xa9, 0xa7, 0x8b, 0x73, 0x9e, 0xbe, 0x71, 0x97,
	0xf0, 0x7f, 0xef, 0xb2, 0xf1, 0x1a, 0xd6, 0xa7, 0x37, 0xe5, 0xa3, 0x43, 0x28, 0x9d, 0xf1, 0x5e,
	0x77, 0x32, 0x60, 0x4d, 0x31, 0x72, 0xe6, 0xfa, 0x5e, 0xe3, 0x5d, 0x85, 0xa7, 0xa9, 0xd6, 0xfa,
	0xd9, 0xb4, 0xcc, 0xf6, 0xdf, 0x59, 0xb8, 0x93, 0xfe, 0x50, 0x26, 0xae, 0x79, 0x1f, 0x56, 0x18,
	0x67, 0x44, 0xcd, 0xe8, 0x9b, 0xa3, 0xb1, 0x71, 0x6f, 0x41, 0x7e, 0xc9, 0x19, 0x41, 0x5b, 0x90,
	0x63, 0xe4, 0x52, 0x55, 0xf4, 0xda, 0x68, 0x6c, 0xa0, 0x45, 0x82, 0x5c, 0xa2, 0x8f, 0x61, 0xcd,
	0x23, 0x0c, 0x53, 0xd6, 0x57, 0xb3, 0xba, 0x3e, 0x1a, 0x1b, 0xb5, 0x05, 0xe8, 0x38, 0x56, 0xd1,
	0x8e, 0x74, 0x90, 0x43, 0x7c, 0x3f, 0x62, 0x73, 0xfa, 0xc3, 0xd1, 0xd8, 0xb8, 0xbf, 0xc8, 0xa6,
	0x00, 0x7a, 0x04, 0xab, 0x82, 0xd8, 0xf8, 0x4a, 0x5d, 0xd1, 0xb5, 0xd1, 0xd8, 0xa8, 0x2e, 0x90,
	0x56, 0xa4, 0xa1, 0xc7, 0x50, 0x70, 0xf8, 0x85, 0xe7, 0x92, 0x80, 0xa8, 0xab, 0xfa, 0x83, 0xd1,
	0xd8, 0xd8, 0x5c, 0xe0, 0x9e, 0x27, 0x32, 0x32, 0x61, 0xcd, 0xb1, 0x99, 0x43, 0x5c, 0xac, 0xe6,
	0x97, 0x93, 0x52, 0x25, 0x91, 0x13, 0xf2, 0xa7, 0x36, 0x75, 0x09, 0x56, 0xd7, 0xf4, 0xfb, 0xa3,
	0xb1, 0xb1, 0xb1, 0x00, 0xbe, 0x90, 0xa2, 0xbe, 0xf9, 0xc3, 0x4f, 0xf5, 0xcc, 0x6f, 0x3f, 0xd7,
	0x17, 0xa7, 0xba, 0xfd, 0x8f, 0x02, 0xa5, 0xd9, 0xeb, 0x45, 0x9f, 0x00, 0x9a, 0xf3, 0x46, 0x37,
	0x19, 0x7a, 0x75, 0x34, 0x36, 0xd4, 0x59, 0x52, 0x4e, 0xfc, 0x09, 0x54, 0xe7, 0x69, 0xdb, 0x09,
	0xe8, 0x90, 0x4c, 0xae, 0x60, 0x96, 0x6f, 0x4b, 0x05, 0x7d, 0x0a, 0xb5, 0xf9, 0x0c, 0xca, 0x92,
	0x9c, 0x6c, 0x3c, 0xbb, 0xd9, 0x9c, 0x4e, 0xa2, 0x45, 0xff, 0x14, 0xf3, 0x59, 0x44, 0x08, 0x2e,
	0xd4, 0x9c, 0xbe, 0x31, 0x1a, 0x1b, 0x77, 0x67, 0x53, 0x0e, 0x23, 0x41, 0xaf, 0x26, 0xdf, 0x3b,
	0xf7, 0x6d, 0x07, 0xd5, 0xdf, 0xaf, 0xeb, 0x99, 0x3f, 0xae, 0xeb, 0x99, 0x3f, 0xaf, 0xeb, 0x99,
	0x1f, 0xff, 0xaa, 0x67, 0xbe, 0xcb, 0x0e, 0x77, 0x7b, 0x79, 0xf9, 0xe7, 0xfc, 0xf4, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xc2, 0x40, 0x8f, 0x86, 0x3e, 0x08, 0x00, 0x00,
}
